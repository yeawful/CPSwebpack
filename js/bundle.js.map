{"version":3,"file":"./js/bundle.js","mappings":"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","sources":["webpack://web-last-block/./src/js/button.js","webpack://web-last-block/./src/js/swiper.js","webpack://web-last-block/webpack/bootstrap","webpack://web-last-block/webpack/runtime/compat get default export","webpack://web-last-block/webpack/runtime/define property getters","webpack://web-last-block/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// ==================== UTILITY FUNCTIONS ====================\n\n/**\n * Переключает состояние секции (раскрытие/скрытие)\n * @param {HTMLElement} section - Секция, которую нужно раскрыть/скрыть\n * @param {HTMLElement} button - Кнопка, которая управляет состоянием секции\n * @param {HTMLElement} buttonText - Элемент, содержащий текст кнопки\n * @param {string} expandedClass - Класс, который добавляется/удаляется при раскрытии\n * @param {string} showText - Текст кнопки в состоянии \"показать\"\n * @param {string} hideText - Текст кнопки в состоянии \"скрыть\"\n */\nfunction toggleSection(\n  section,\n  button,\n  buttonText,\n  expandedClass,\n  showText,\n  hideText\n) {\n  section.classList.toggle(expandedClass)\n  buttonText.textContent = section.classList.contains(expandedClass)\n    ? hideText\n    : showText\n}\n\n/**\n * Закрывает элемент при клике вне его области\n * @param {HTMLElement} element - Элемент, который нужно закрыть\n * @param {NodeList} buttons - Кнопки, которые не должны закрывать элемент\n * @param {Function} closeFunction - Функция, которая выполняет закрытие\n */\nfunction closeOnClickOutside(element, buttons, closeFunction) {\n  document.addEventListener('click', function (event) {\n    const buttonsArray = Array.from(buttons)\n    if (\n      !element.contains(event.target) &&\n      !buttonsArray.some((button) => button.contains(event.target))\n    ) {\n      closeFunction()\n    }\n  })\n}\n\n/**\n * Настраивает модальное окно\n * @param {HTMLElement} modal - Модальное окно\n * @param {NodeList} buttons - Кнопки, открывающие модальное окно\n * @param {HTMLElement} closeButton - Кнопка закрытия модального окна\n */\nfunction setupModal(modal, buttons, closeButton) {\n  if (!modal || buttons.length === 0 || !closeButton) return\n\n  buttons.forEach((button) => {\n    button.addEventListener('click', () => {\n      modal.classList.add('modal--shown')\n      overlay.classList.add('overlay--visible')\n      pageContainer.classList.add('blur-background')\n\n      const firstFocusableElement = modal.querySelector(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      )\n      if (firstFocusableElement) firstFocusableElement.focus()\n\n      if (menu.classList.contains('menu--shown')) {\n        menu.classList.remove('menu--shown')\n      }\n    })\n  })\n\n  closeButton.addEventListener('click', () => {\n    modal.classList.remove('modal--shown')\n    overlay.classList.remove('overlay--visible')\n    pageContainer.classList.remove('blur-background')\n    buttons[0].focus()\n  })\n\n  overlay.addEventListener('click', () => {\n    modal.classList.remove('modal--shown')\n    overlay.classList.remove('overlay--visible')\n    pageContainer.classList.remove('blur-background')\n    buttons[0].focus()\n  })\n}\n\n/**\n * Ловушка фокуса для модальных окон\n * @param {HTMLElement} modal - Модальное окно\n */\nfunction trapFocus(modal) {\n  const focusableElements = modal.querySelectorAll(\n    'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  )\n  const firstFocusableElement = focusableElements[0]\n  const lastFocusableElement = focusableElements[focusableElements.length - 1]\n\n  modal.addEventListener('keydown', function (event) {\n    if (event.key === 'Tab') {\n      if (event.shiftKey) {\n        if (document.activeElement === firstFocusableElement) {\n          lastFocusableElement.focus()\n          event.preventDefault()\n        }\n      } else {\n        if (document.activeElement === lastFocusableElement) {\n          firstFocusableElement.focus()\n          event.preventDefault()\n        }\n      }\n    }\n  })\n}\n\n// ==================== DOM ELEMENTS ====================\n\nconst aboutText = document.querySelector('.about__text')\nconst readMoreButton = document.querySelector('.about__read-more')\nconst readMoreButtonText = document.querySelector(\n  '.about__read-more-description'\n)\nconst hiddenParagraph = document.querySelector('.about__paragraph--hidden')\n\nconst list = document.querySelector('.brands__list')\nconst expandButton = document.querySelector('.brands__expand-btn')\nconst expandButtonText = document.querySelector('.brands__expand-text')\n\nconst sectionList = document.querySelector('.devices__list')\nconst sectionExpandButton = document.querySelector('.devices__expand-btn')\nconst sectionExpandButtonText = document.querySelector('.devices__expand-text')\n\nconst burgerMenuButton = document.querySelector('.nav__burger')\nconst menu = document.querySelector('.menu')\nconst closeMenuButton = document.querySelector('.menu__btn--close')\nconst overlay = document.querySelector('.overlay')\nconst pageContainer = document.querySelector('.page-container')\n\nconst callModal = document.querySelector('.modal.call')\nconst callModalButtons = document.querySelectorAll('.btn--call')\nconst closeCallModalButton = callModal?.querySelector('.modal__btn')\n\nconst feedbackModal = document.querySelector('.modal.feedback')\nconst feedbackModalButtons = document.querySelectorAll('.btn--chat')\nconst closeFeedbackModalButton = feedbackModal?.querySelector('.modal__btn')\n\n// ==================== EVENT LISTENERS ====================\n\n// Управление текстом \"Читать далее\"\nif (aboutText && readMoreButton && readMoreButtonText && hiddenParagraph) {\n  readMoreButton.addEventListener('click', () => {\n    aboutText.classList.toggle('about__text--expanded')\n    hiddenParagraph.classList.toggle('about__paragraph--hidden')\n    readMoreButtonText.textContent = aboutText.classList.contains(\n      'about__text--expanded'\n    )\n      ? 'Скрыть'\n      : 'Читать далее'\n  })\n}\n\n// Управление списком брендов\nif (list && expandButton && expandButtonText) {\n  expandButton.addEventListener('click', () => {\n    toggleSection(\n      list,\n      expandButton,\n      expandButtonText,\n      'brands__list--expanded',\n      'Показать все',\n      'Скрыть'\n    )\n  })\n}\n\n// Управление списком устройств\nif (sectionList && sectionExpandButton && sectionExpandButtonText) {\n  sectionExpandButton.addEventListener('click', () => {\n    toggleSection(\n      sectionList,\n      sectionExpandButton,\n      sectionExpandButtonText,\n      'devices__list--expanded',\n      'Показать все',\n      'Скрыть'\n    )\n  })\n}\n\n// Управление бургер-меню\nif (burgerMenuButton && menu && closeMenuButton && overlay && pageContainer) {\n  burgerMenuButton.addEventListener('click', () => {\n    menu.classList.add('menu--shown')\n    overlay.classList.add('overlay--visible')\n    pageContainer.classList.add('blur-background')\n\n    const firstFocusableElement = menu.querySelector(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    )\n    if (firstFocusableElement) firstFocusableElement.focus()\n  })\n\n  closeMenuButton.addEventListener('click', () => {\n    menu.classList.remove('menu--shown')\n    overlay.classList.remove('overlay--visible')\n    pageContainer.classList.remove('blur-background')\n    burgerMenuButton.focus()\n  })\n\n  overlay.addEventListener('click', () => {\n    menu.classList.remove('menu--shown')\n    overlay.classList.remove('overlay--visible')\n    pageContainer.classList.remove('blur-background')\n    burgerMenuButton.focus()\n  })\n}\n\n// Управление модальными окнами\nsetupModal(callModal, callModalButtons, closeCallModalButton)\nsetupModal(feedbackModal, feedbackModalButtons, closeFeedbackModalButton)\n\n// Закрытие модальных окон и меню по нажатию на Esc\ndocument.addEventListener('keydown', (event) => {\n  if (event.key === 'Escape') {\n    const openModal = document.querySelector('.modal--shown')\n    if (openModal) {\n      openModal.classList.remove('modal--shown')\n      overlay.classList.remove('overlay--visible')\n      pageContainer.classList.remove('blur-background')\n\n      const modalButtons = openModal.classList.contains('call')\n        ? callModalButtons\n        : feedbackModalButtons\n      if (modalButtons.length > 0) modalButtons[0].focus()\n    }\n\n    if (menu.classList.contains('menu--shown')) {\n      menu.classList.remove('menu--shown')\n      overlay.classList.remove('overlay--visible')\n      pageContainer.classList.remove('blur-background')\n      burgerMenuButton.focus()\n    }\n  }\n})\n\n// Применяем ловушку фокуса для всех модальных окон\nif (callModal) trapFocus(callModal)\nif (feedbackModal) trapFocus(feedbackModal)\n","/* eslint-disable indent */\nconst mediaQuery = window.matchMedia('(max-width: 767px)')\nconst swiperInstances = {}\n\nfunction initializeSwiperElements(blockClass) {\n  const swiperContainer = document.querySelector(`.${blockClass}__content`)\n  const swiperWrapper = document.querySelector(`.${blockClass}__list`)\n  const swiperSlides = document.querySelectorAll(`.${blockClass}__item`)\n  const swiperPagination = document.querySelector(\n    `.${blockClass} .swiper-pagination`\n  )\n\n  if (!swiperContainer || !swiperWrapper || swiperSlides.length === 0) {\n    return null\n  }\n\n  swiperContainer.classList.add('swiper')\n  swiperWrapper.classList.add('swiper-wrapper')\n  swiperSlides.forEach((slide) => {\n    slide.classList.add('swiper-slide')\n    slide.setAttribute('tabindex', '0') // Добавляем tabindex к каждому слайду\n  })\n\n  // Добавляем ARIA-атрибуты\n  swiperContainer.setAttribute('role', 'region')\n  swiperContainer.setAttribute('aria-label', 'Слайдер')\n  swiperWrapper.setAttribute('role', 'list')\n  swiperSlides.forEach((slide, index) => {\n    slide.setAttribute('role', 'listitem')\n    slide.setAttribute('aria-label', `Слайд ${index + 1}`)\n  })\n\n  return { swiperContainer, swiperPagination }\n}\n\nfunction configureSwiper(blockClass, swiperContainer, swiperPagination) {\n  // eslint-disable-next-line no-undef\n  swiperInstances[blockClass] = new Swiper(swiperContainer, {\n    pagination: swiperPagination\n      ? {\n          el: swiperPagination,\n          type: 'bullets',\n          clickable: true\n        }\n      : false,\n    simulateTouch: true,\n    grabCursor: true,\n    slideToClickedSlide: true,\n    spaceBetween: 16,\n    slidesOffsetAfter: 32,\n    slidesPerView: 1.2,\n    breakpoints: {\n      320: { slidesPerView: 1.2 },\n      480: { slidesPerView: 1.6 },\n      560: { slidesPerView: 1.8 },\n      640: { slidesPerView: 2.0 },\n      720: { slidesPerView: 2.2 }\n    },\n    on: {\n      slideChange: function () {\n        const activeSlide = this.slides[this.activeIndex]\n        if (activeSlide) {\n          activeSlide.focus() // Перемещаем фокус на активный слайд\n        }\n      }\n    }\n  })\n\n  if (swiperPagination) {\n    swiperPagination.style.display = mediaQuery.matches ? 'block' : 'none'\n    const paginationBullets = swiperPagination.querySelectorAll(\n      '.swiper-pagination-bullet'\n    )\n    paginationBullets.forEach((bullet) => {\n      bullet.setAttribute('tabindex', '0') // Делаем элементы пагинации фокусируемыми\n    })\n  }\n}\n\nfunction destroySwiper(blockClass) {\n  if (swiperInstances[blockClass] && swiperInstances[blockClass].destroy) {\n    swiperInstances[blockClass].destroy(true, true)\n  }\n  swiperInstances[blockClass] = null\n\n  const swiperContainer = document.querySelector(`.${blockClass}__content`)\n  const swiperWrapper = document.querySelector(`.${blockClass}__list`)\n  const swiperSlides = document.querySelectorAll(`.${blockClass}__item`)\n\n  if (swiperContainer) swiperContainer.classList.remove('swiper')\n  if (swiperWrapper) swiperWrapper.classList.remove('swiper-wrapper')\n  swiperSlides.forEach((slide) => slide.classList.remove('swiper-slide'))\n\n  const swiperPagination = document.querySelector(\n    `.${blockClass} .swiper-pagination`\n  )\n  if (swiperPagination) {\n    swiperPagination.style.display = 'none'\n  }\n}\n\nfunction initSwiper(blockClass) {\n  if (mediaQuery.matches && !swiperInstances[blockClass]) {\n    const swiperElements = initializeSwiperElements(blockClass)\n    if (swiperElements) {\n      const { swiperContainer, swiperPagination } = swiperElements\n      configureSwiper(blockClass, swiperContainer, swiperPagination)\n    }\n  } else if (!mediaQuery.matches && swiperInstances[blockClass]) {\n    destroySwiper(blockClass)\n  }\n}\n\nconst blocks = ['brands', 'devices', 'prices']\nblocks.forEach((block) => {\n  initSwiper(block)\n})\n\nmediaQuery.addEventListener('change', () => {\n  blocks.forEach((block) => {\n    initSwiper(block)\n  })\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["toggleSection","section","button","buttonText","expandedClass","showText","hideText","classList","toggle","textContent","contains","setupModal","modal","buttons","closeButton","length","forEach","addEventListener","add","overlay","pageContainer","firstFocusableElement","querySelector","focus","menu","remove","trapFocus","focusableElements","querySelectorAll","lastFocusableElement","event","key","shiftKey","document","activeElement","preventDefault","aboutText","readMoreButton","readMoreButtonText","hiddenParagraph","list","expandButton","expandButtonText","sectionList","sectionExpandButton","sectionExpandButtonText","burgerMenuButton","closeMenuButton","callModal","callModalButtons","closeCallModalButton","feedbackModal","feedbackModalButtons","closeFeedbackModalButton","openModal","modalButtons","mediaQuery","window","matchMedia","swiperInstances","initSwiper","blockClass","matches","swiperElements","swiperContainer","swiperWrapper","swiperSlides","swiperPagination","slide","setAttribute","index","initializeSwiperElements","Swiper","pagination","el","type","clickable","simulateTouch","grabCursor","slideToClickedSlide","spaceBetween","slidesOffsetAfter","slidesPerView","breakpoints","on","slideChange","activeSlide","this","slides","activeIndex","style","display","bullet","configureSwiper","destroy","destroySwiper","blocks","block","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}